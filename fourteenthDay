import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        try{
            int x = scan.nextInt();scan.nextLine();
            int y = scan.nextInt();
            System.out.println(x/y);
        }catch( InputMismatchException e){
        System.out.println("java.util.InputMismatchException");
        }
        catch(ArithmeticException  e){
            System.out.println("java.lang.ArithmeticException: / by zero");
        }
        scan.close();
    }
}

import java.util.Scanner;
import java.lang.Math;
class MyCalculator {
   long power(int n, int p) throws Exception{
       if(n<0 || p<0)
            throw new Exception("n or p should not be negative.");
        else if(n == 0 && p == 0)
            throw new Exception("n and p should not be zero.");
        else{
            return (long)Math.pow(n, p);
        }      
   } 
}

public class Solution {
    public static final MyCalculator my_calculator = new MyCalculator();
    public static final Scanner in = new Scanner(System.in);
    
    public static void main(String[] args) {
        while (in .hasNextInt()) {
            int n = in .nextInt();
            int p = in .nextInt();
            
            try {
                System.out.println(my_calculator.power(n, p));
            } catch (Exception e) {
                System.out.println(e);
            }
        }
    }
}

import java.util.*;
import java.lang.*;

class Student {
	private int id;
	private String fname;
	private double cgpa;
	public Student(int id, String fname, double cgpa) {
		super();
		this.id = id;
		this.fname = fname;
		this.cgpa = cgpa;
	}
	public int getId() {
		return id;
	}
	public String getFname() {
		return fname;
	}
	public double getCgpa() {
		return cgpa;
	}
    
}
class Checker implements Comparator<Student>{
    
    @Override
    public int compare(Student s1, Student s2){
        if(s1.getCgpa() > s2.getCgpa())
            return -1;
        else if(s1.getCgpa() < s2.getCgpa())
            return 1;
        else if(s1.getCgpa() == s2.getCgpa()){
            if(s1.getFname().compareTo(s2.getFname()) == 0){
                return Math.max(s1.getId(), s2.getId());
            }
            else return s1.getFname().compareTo(s2.getFname());
        }
        return 0;
    }
}

public class Solution
{
	public static void main(String[] args){
		Scanner in = new Scanner(System.in);
		int testCases = Integer.parseInt(in.nextLine());
		Checker c = new Checker();
		List<Student> studentList = new ArrayList<Student>();
		while(testCases>0){
			int id = in.nextInt();
			String fname = in.next();
			double cgpa = in.nextDouble();
			
			Student st = new Student(id, fname, cgpa);
			studentList.add(st);
			
			testCases--;
		}
        Collections.sort(studentList,c);
      	for(Student st: studentList){
			System.out.println(st.getFname());
		}
	}
}

